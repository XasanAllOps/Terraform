image:
  name: hashicorp/terraform:1.6.6
  entrypoint: [""]

variables:
  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY}
  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_KEY}

cache:
  key: "$CI_JOB_NAME"
  paths:
    - "DevOps Project/.terraform"

stages:
  - plan
  - apply
  - destroy

##########################
# DEV IT UP
##########################

dev_plan:
  stage: plan
  environment:
    name: dev
  script:
    - cd "DevOps Project/environment/dev"
    - terraform init
    - terraform fmt
    - terraform validate
    - export DB_USERNAME=$DB_USERNAME_DEV
    - export DB_PASSWORD=$DB_PASSWORD_DEV
    - terraform plan -var="db_username=$DB_USERNAME" -var="db_password=$DB_PASSWORD" -out="planfile"
  artifacts:
    paths: ["DevOps Project/environment/dev/planfile"]
    expire_in: 1 hour

dev_apply:
  stage: apply
  needs: [dev_plan]
  environment:
    name: dev
    action: start
  script:
    - cd "DevOps Project/environment/dev"
    - terraform apply --auto-approve -input=false "planfile"

dev_destroy:
  stage: destroy
  needs: [dev_apply]
  when: manual
  environment:
    name: dev
    action: stop
  script:
    - cd "DevOps Project/environment/dev"
    - terraform destroy --auto-approve -var="db_username=$DB_USERNAME" -var="db_password=$DB_PASSWORD"

##########################
# LETS STAGE IT
##########################

stage_plan:
  stage: plan
  environment:
    name: stage
  script:
    - cd "DevOps Project/environment/stage"
    - terraform init
    - terraform fmt -check
    - terraform validate
    - export DB_USERNAME=$DB_USERNAME_STAGE
    - export DB_PASSWORD=$DB_PASSWORD_STAGE
    - terraform plan -var="db_username=$DB_USERNAME" -var="db_password=$DB_PASSWORD" -out="planfile"
  artifacts:
    paths: ["DevOps Project/environment/stage/planfile"]
    expire_in: 1 hour

stage_apply:
  stage: apply
  needs: [stage_plan]
  environment:
    name: stage
    action: start
  script:
    - cd "DevOps Project/environment/stage"
    - terraform apply --auto-approve -input=false "planfile"

stage_destroy:
  stage: destroy
  needs: [stage_apply]
  when: manual
  environment:
    name: stage
    action: stop
  script:
    - cd "DevOps Project/environment/stage"
    - terraform destroy --auto-approve -var="db_username=$DB_USERNAME" -var="db_password=$DB_PASSWORD"

##########################
# THE PRODUCTION LINE
##########################

prod_plan:
  stage: plan
  environment:
    name: prod
  script:
    - cd "DevOps Project/environment/prod"
    - terraform init
    - terraform fmt -check
    - terraform validate
    - export DB_USERNAME=$DB_USERNAME_PROD
    - export DB_PASSWORD=$DB_PASSWORD_PROD
    - terraform plan -var="db_username=$DB_USERNAME" -var="db_password=$DB_PASSWORD" -out="planfile"
  artifacts:
    paths: ["DevOps Project/environment/prod/planfile"]
    expire_in: 1 hour

prod_apply:
  stage: apply
  needs: [prod_plan]
  environment:
    name: prod
    action: start
  script:
    - cd "DevOps Project/environment/prod"
    - terraform apply --auto-approve -input=false "planfile"

prod_destroy:
  stage: destroy
  needs: [prod_apply]
  when: manual
  environment:
    name: prod
    action: stop
  script:
    - cd "DevOps Project/environment/prod"
    - terraform destroy --auto-approve -var="db_username=$DB_USERNAME" -var="db_password=$DB_PASSWORD"